name: Integration Test

on:
  pull_request:
    branches: [ main ]

permissions:
  checks: write
  contents: write
  pull-requests: write

jobs:
  build:
    strategy:
      matrix:
        angular-version: [9, 10, 11, 12, 13, 14]
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    steps:
    - name: ⤵️ Check out code from GitHub
      uses: actions/checkout@v3

    - name: 🏗 Setup node version
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'pnpm'
    - run: |
           pnpm install --frozen-lockfile

    - name: 🏗 Setup Angular Project Version ${{ matrix.angular-version }}
      run: |
           mkdir -p tmp
           cd tmp
           pnpm dlx @angular/cli@${{ matrix.angular-version }} new --create-application --package-manager=pnpm --skip-install --defaults -g -t -s -S angular${{ matrix.angular-version }}
           cd angular${{ matrix.angular-version }}
           ncu --target minor -u jasmine-core
           pnpm install

    - name: 🏗 Build Library
      run: |
           pnpm install --frozen-lockfile
           pnpm build
           mkdir -p tmp/dist
           cd out
           pnpm pack --pack-destination ../tmp/dist
           cd ../tmp/dist
           echo "LIBRARY=$(find . -mindepth 1 -print -quit)" >> $GITHUB_ENV

    - name: 🔗 Link Library into Angular Project Version  ${{ matrix.angular-version }}
      run: |
           cd tmp/angular${{ matrix.angular-version }}
           pnpm install --save ../dist/${{ env.LIBRARY }}
           pnpm install
           pnpm exec ng version

    - name: ✅ Add Linter configuration to angular.json into Angular Project Version ${{ matrix.angular-version }}
      run: |
           cd tmp/angular${{ matrix.angular-version }}
           jq -r '.projects.angular${{ matrix.angular-version }}.architect.lint = {"builder":"@krema/angular-eslint-stylelint-builder:lint","options":{"eslintFilePatterns":["src/app/*.ts"],"stylelintFilePatterns":["src/app/*.css"]}}' angular.json > angular.json.tmp
           mv -f angular.json.tmp angular.json

    - name: 🚁 Move test & config files into Angular Project Version ${{ matrix.angular-version }}
      run: |
           cp test/.eslintrc* tmp/angular${{ matrix.angular-version }}
           cp test/.stylelintrc* tmp/angular${{ matrix.angular-version }}
           rm -rf tmp/angular${{ matrix.angular-version }}/src/app/*
           cp test/src/* tmp/angular${{ matrix.angular-version }}/src/app

    - name: 🚀 Run Linter in Angular Project Version ${{ matrix.angular-version }}
      run: |
           cd tmp/angular${{ matrix.angular-version }}
           set +e
           pnpm exec ng lint > result.txt
           set -e
           cat result.txt
           grep -Fx "✖ 5 problems (5 errors, 0 warnings)" result.txt && echo "SUCCESS=1" >> $GITHUB_ENV || echo "SUCCESS=0" >> $GITHUB_ENV

    - name: Assert result
      if: ${{ env.SUCCESS != 1 }}
      uses: actions/github-script@v6
      with:
        script: |
            core.setFailed('Linter didn\'t work')
